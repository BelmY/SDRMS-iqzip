# Copyright 2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of iqzip
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

add_executable(iqzip_sigmf_example
        example_record_with_variadic_dataclass.cpp)
#target_link_libraries(iqzip_sigmf_example libsigmf)
target_include_directories(iqzip_sigmf_example PRIVATE ${CMAKE_BINARY_DIR}/include)

#add_executable(example_record_with_multiple_namespaces example_record_with_multiple_namespaces.cpp)
#target_link_libraries(example_record_with_multiple_namespaces libsigmf)
#target_include_directories(example_record_with_multiple_namespaces PRIVATE ${CMAKE_BINARY_DIR}/include)

#add_executable(example_sigmf_json_roundtrip example_sigmf_json_roundtrip.cpp)
#target_link_libraries(example_sigmf_json_roundtrip libsigmf)
#target_include_directories(example_sigmf_json_roundtrip PRIVATE ${CMAKE_BINARY_DIR}/include)

#add_test(NAME simple_variadic_sigmf_to_json
#        COMMAND example_record_with_variadic_dataclass)
#add_test(NAME simple_variadic_2ns_sigmf_to_json
#        COMMAND example_record_with_multiple_namespaces)


# This demonstrates some of the features of flatbuffers we use internally to libsigmf. This is primaryily useful to
# experiment / understand the libsigmf internals on concrete flatbuffers types outside of the heavily templated
# VariadicDataClass


# add_executable(flatbuffer_patterns flatbuffer_patterns.cpp)
# target_link_libraries(flatbuffer_patterns libsigmf)
# target_include_directories(flatbuffer_patterns PRIVATE ${CMAKE_BINARY_DIR})


install(
    PROGRAMS 
    DESTINATION bin
)
